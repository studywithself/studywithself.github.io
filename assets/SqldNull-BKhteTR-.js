import{_ as t,c as e,b as d,o}from"./index-DtQaNm1B.js";const a={},b={class:"flex flex-col gap-5"};function s(p,r){return o(),e("div",b,r[0]||(r[0]=[d('<h1 class="text-3xl font-bold">NULL과 0의 차이</h1><table class="border-collapse border border-gray-300 w-80 text-center"><thead><tr><th class="border border-gray-300 px-4 py-2">번호</th><th class="border border-gray-300 px-4 py-2">이름</th><th class="border border-gray-300 px-4 py-2">성별</th></tr></thead><tbody><tr><td class="border border-gray-300 px-4 py-2">1</td><td class="border border-gray-300 px-4 py-2"></td><td class="border border-gray-300 px-4 py-2">남자</td></tr><tr><td class="border border-gray-300 px-4 py-2">2</td><td class="border border-gray-300 px-4 py-2">심청이</td><td class="border border-gray-300 px-4 py-2">여자</td></tr></tbody></table><p> NULL은 위 테이블처럼 데이터가 없는 도메인이 있을 때 발생합니다. <br> 0과는 차이점이 있습니다. <br> NULL은 도메인 값이 없지만, 0은 수치적으로 0의 값이라는 차이입니다. <br> 추가적으로 NaN은 속성에 맞지 않는 도메인 값을 가진 경우입니다. <br></p><p> 쉽게 은행 업무를 보는 통장으로 비유해 보겠습니다. <br> NULL : 통장이 없습니다. <br> 0 : 통장 잔액이 없습니다. <br> NaN : 통장에 부루마블 돈을 어떻게 넣습니까 <br></p><p> NULL을 포함한 연산 결과는 항상 NULL이 됩니다. <br> 그룹 함수를 사용하는 경우 NULL을 제외하고 연산을 수행합니다. (SUM, AVG, MIN, MAX …) <br></p><p> IE 표기법에는 NULL 허용 여부를 알 수 없습니다. <br> 바커 표기법은 속성 앞 동그라미가 NULL 허용 속성을 의미합니다. <br></p>',6)]))}const c=t(a,[["render",s]]);export{c as default};
