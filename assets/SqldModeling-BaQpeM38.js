import{_ as t,c as s,b as o,o as b}from"./index-4CIuX3sN.js";const n={},e={class:"flex flex-col gap-5"};function l(g,r){return b(),s("div",e,r[0]||(r[0]=[o('<h1 class="text-3xl font-bold">데이터 모델링 Modeling</h1><p><strong class="text-blue-600">데이터 모델링</strong>은 현실 세계의 복잡한 데이터를 단순화하고 추상화하여, <br> 데이터베이스에 저장하기 적합한 형태로 설계하는 과정입니다. <br> 이 과정은 현실의 데이터를 논리적인 구조로 변환하고, <br> 그 구조를 다시 물리적인 데이터베이스에 구현하는 단계로 이루어집니다. <br></p><p> 모델링의 주요 목표는 다음 세 가지 원칙을 따르는 것입니다. <br> 단순화: 불필요한 정보를 제거하고 핵심적인 내용만 간략하게 표현합니다. <br> 추상화: 복잡한 현실을 데이터베이스의 규칙에 맞게 개념적으로 표현합니다. <br> 명확화: 애매모호한 부분을 제거하고 모든 요소를 정확하게 정의합니다. <br></p><h2 class="text-blue-600 font-bold text-xl my-2">모델링의 단계</h2><p><strong>1. 개념적 모델링</strong> <br> 목표: 비즈니스 요구사항을 파악하고, 주요 데이터와 관계를 찾아냅니다. <br> 특징: 추상화 수준이 가장 높아, 특정 기술이나 시스템에 구애받지 않고 현실 세계를 이해하는 단계입니다. <br> 주요 산출물: <strong class="text-blue-600">ERD (개체-관계 다이어그램)</strong>를 작성하여 엔터티(개체)와 그 관계를 시각적으로 표현합니다. <br><br><strong>2. 논리적 모델링</strong> <br> 목표: 개념적 모델링을 바탕으로 데이터의 논리적 구조를 상세하게 정의합니다. <br> 특징: 특정 DBMS에 종속되지 않는 독립적인 모델을 만듭니다. <br> 데이터 중복을 제거하고 데이터의 일관성을 확보하는 정규화가 이 단계에서 수행됩니다. <br> 주요 산출물: 정규화된 테이블과 속성, 그리고 이들의 관계가 정의된 논리적 데이터 모델입니다. <br><br><strong>3. 물리적 모델링</strong> <br> 목표: 논리적 모델링을 실제 데이터베이스에 구현하기 위한 모든 기술적 세부사항을 정의합니다. <br> 특징: 특정 <strong class="text-blue-600">DBMS(데이터베이스 관리 시스템)</strong>의 성능을 고려하여<br> 테이블과 속성, 인덱스, 저장 공간 등을 구체적으로 설계합니다. <br> 주요 산출물: 실제 데이터베이스에 생성될 테이블 정의서와 스키마 등입니다. </p><h2 class="text-blue-600 font-bold text-xl my-2">모델링 시 유의점</h2><p>효율적이고 안정적인 데이터베이스를 설계하기 위해 다음 사항들을 고려해야 합니다.</p><p><strong>중복성 최소화</strong>: 같은 정보가 여러 곳에 저장되지 않도록 하여 데이터 공간 낭비를 막고, 일관성을 유지해야 합니다. <br><strong>유연성 확보</strong>: 사소한 비즈니스 변화에도 전체 데이터 구조가 크게 바뀌지 않도록 설계해야 합니다. <br><strong>일관성 유지</strong>: 데이터에 모순이 발생하지 않도록 하여 언제나 신뢰할 수 있는 데이터를 제공해야 합니다. <br></p>',8)]))}const a=t(n,[["render",l]]);export{a as default};
