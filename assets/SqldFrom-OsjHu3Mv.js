import{_ as s,c as e,b as o,o as r}from"./index-C3RhNgxk.js";const l={},n={class:"flex flex-col gap-5"};function g(c,t){return r(),e("div",n,t[0]||(t[0]=[o('<h1 class="text-3xl font-bold">FROM</h1><p> SELECT 문에서 <strong class="text-blue-600">데이터를 가져올 테이블 또는 뷰</strong>를 지정하는 역할이 FROM 절입니다. <br> 쿼리의 첫 번째 논리적 실행 단계로, 어떤 테이블에서 정보를 찾을지 정의합니다. <br><strong class="text-blue-600">SELECT절이 무엇을</strong> 가져올지 결정했다면, <strong class="text-blue-600">FROM절은 어디서</strong> 가져올지 정의합니다. </p><h2 class="text-blue-600 font-bold text-xl my-2">FROM문의 기능</h2><p>단일 테이블 지정으로 기본적으로 하나의 테이블에서 데이터를 조회할 수 있습니다.</p><p><strong class="text-blue-600">다중 테이블 조인</strong>으로 <strong class="text-blue-600">여러 테이블을 결합</strong>하여 가져올 때 사용합니다. <br> 여러 테이블을 <strong class="text-blue-600">쉼표(,)</strong>로 구분해 작성이 가능합니다. <br> 다른 테이블에 분산된 데이터를 논리적으로 연결해 <strong class="text-blue-600">하나의 결과</strong>로 볼 수 있습니다. <br> 단, <strong class="text-blue-600">테이블명만 작성</strong>해 구분하게 된다면 <strong class="text-blue-600">카티시안 곱</strong>을 발생시켜 <strong class="text-blue-600">모든 행의 조합</strong>이 나와 <strong class="text-blue-600">비효율적</strong>입니다. </p><p><strong class="text-blue-600">테이블 별칭을 사용</strong>해 코드를 간결하게 만듭니다. <br> 위에서 설명한대로 FROM절에서 설정한 별칭이라면 계속 별칭명으로 써야하는 유의점이 있습니다. </p><p> FROM절은 대부분 필수적입니다. 그러나 <strong class="text-blue-600">일부 DBMS</strong>는 <strong class="text-blue-600">간단한 계산</strong>이나 <strong class="text-blue-600">시스템 변수 조회</strong>같은 테이블이 필요하지 않은 경우 생략이 가능합니다. <br> 단, <strong class="text-blue-600">오라클 DMBS</strong>는 <strong class="text-blue-600">DUAL</strong>이라는 가상의 테이블을 사용해 작업 수행이 필수이므로, <strong class="text-blue-600">생략이 불가능</strong>합니다. </p>',7)]))}const b=s(l,[["render",g]]);export{b as default};
